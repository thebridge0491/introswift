// swift-tools-version:5.5

import PackageDescription
import Foundation

func targetDepn(_ name:String) -> Target.Dependency {
    //return Target.Dependency.target(name: name)
    return Target.Dependency(stringLiteral: name)
}
let (parent, parentlwr) = ("{{parentcap}}{{^parentcap}}Introswift{{/parentcap}}", "{{parent}}{{^parent}}introswift{{/parent}}")
let prefix = ProcessInfo.processInfo.environment["PREFIX"] ?? "/usr/local"

let package = Package(
    name: "\(parent)",
    products: [
        .library(name: "\(parent)_Util"
            , type: .static // [.dynamic | .static]
            , targets: ["\(parent)_Util"])
        , .library(name: "\(parent)_Intro"
            , type: .static // [.dynamic | .static]
            , targets: ["\(parent)_Intro"])
        , .executable(name: "\(parent)_IntroMain"
            , targets: ["\(parent)_IntroMain"])
    ],
    dependencies: [
        //.package(url: /* package url */, from: "1.0.0"),
	    .package(url: "https://github.com/apple/swift-docc-plugin.git", from: "1.0.0"),
	    .package(url: "https://github.com/stackotter/swift-lint-plugin.git", from: "0.1.0"),
	    .package(url: "https://github.com/typelift/SwiftCheck.git", from: "0.7.0"){{#executable}},
	    .package(url: "https://github.com/jdfergason/swift-toml.git", from: "1.0.0"),
	    .package(url: "https://github.com/behrang/YamlSwift.git", from: "3.0.0"),
	    .package(url: "https://github.com/dduan/TOMLDecoder.git", from: "0.2.1"),
	    .package(url: "https://github.com/jpsim/Yams.git", from: "4.0.0"){{/executable}},
	    //.package(url: "\(parentlwr)_util", .branch("master")),
	    //.package(path: "\(parentlwr)_util")
    ],
    targets: [
        .target(
            name: "\(parent)_Util"
            , dependencies: []
            , path: "\(parentlwr)_util/Sources/\(parent)/Util"
        )
        , .target(
            name: "\(parent)_Intro"
            , dependencies: []
            , path: "\(parentlwr)_intro/Sources/\(parent)/Intro"
        )
        , .executableTarget(
            name: "\(parent)_IntroMain"
            , dependencies: [.product(name: "Toml", package: "swift-toml"),
                .product(name: "Yaml", package: "YamlSwift")
                , "TOMLDecoder", "Yams", targetDepn("\(parent)_Intro")]
            , path: "\(parentlwr)_intro/Sources/\(parent)/Main"
            //, linkerSettings: [.unsafeFlags(["-L\(prefix)/lib"
            //	, "-l\(parent)_Util"])]
        )
        /*, .testTarget(
            name: "\(parent)_UtilTests"
            , dependencies: ["SwiftCheck", targetDepn("\(parent)_Util")]
            , path: "\(parentlwr)_util/Tests/\(parent)/UtilTests"
            , exclude: ["ClassicCases.swift", "ClassicProps.swift"]
            //, linkerSettings: [.unsafeFlags(["-L\(prefix)/lib"
            //	, "-l\(parent)_Util"])]
        )
        , .testTarget(
            name: "\(parent)_IntroTests"
            , dependencies: ["SwiftCheck"//, targetDepn("\(parent)_Util")
                , targetDepn("\(parent)_Intro")]
            , path: "\(parentlwr)_intro/Tests/\(parent)/IntroTests"
            , exclude: ["ClassicCases.swift", "ClassicProps.swift"]
            , linkerSettings: [.unsafeFlags(["-L\(prefix)/lib"
            	, "-l\(parent)_Util"])]
        )*/
    ]
)
